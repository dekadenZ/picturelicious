#!/bin/bash
set -e -o pipefail
Magick="$(command -v gm || command -v im)"
oldschema=lowbird
newschema=picturelicious
thumbnail_sizes='64 128 192'

if [ ! -d 2013/01 ]; then
	echo 'Are you sure »data/images« is the current working directory? If yes, please create a directory »2013/01« to overide this sanity check.' >&2
	exit 2
fi

mysql -B "$newschema" < "${0%.sh}.sql"

# image checksums
checksumfile="/tmp/$newschema-sha1sums.txt"
( if [ -s "$checksumfile.xz" ]; then
	exec xz -dc "$checksumfile.xz"
else
	find -type f -exec sha1sum -b -- \{\} + |
	tee >(exec xz -zc -9e > "$checksumfile.xz")
fi; ) |
sed -re 's|^(\S+)\s\*\./(.+)\.[^\./]*$|UPDATE `pl_images` SET `hash`=UNHEX(\x27\1\x27) WHERE `keyword`=\x27\2\x27;|' |
tee >(exec mysql -B "$newschema")
echo "If everything went well, you can delete »$checksumfile.xz«." >&2

# image widths and heights
find -type f -exec "$Magick" identify -format '%w %h %d/%f\n' \{\} + |
uniq -f 2 | # skip lines generated by ImageMagick for additional GIF frames
sed -nre 's|^([0-9]+) ([0-9]+) \./(.+)\.[^\./]*$|UPDATE `pl_images` SET `width`=\1, `height`=\2 WHERE `keyword`=\x27\3\x27;|p' |
tee >(exec mysql -B "$newschema")


# derive image and file names from the hash value of their content
# thumbnails take after their original
mysql -B "$newschema" <<-'EOF' |
	SELECT
		substring(`keyword`, 1, 7) AS `srcdir`,
		`image` AS `src`,
		concat(lower(hex(substring(`hash`, 1, 1))), '/', lower(hex(substring(`hash`, 2, 1)))) AS `dstdir`,
		lower(hex(`hash`)) AS `dst`
	FROM `pl_images`;
EOF
{
	thumbs=../thumbs
	read -r src
	set +e
	while IFS=$'\t' read -r srcdir src dstdir dst
	do
		[ -e "$dstdir" ] || mkdir -vp "$dstdir"
		cp -vnlT "$srcdir/$src" "$dstdir/$dst.${src##*.}" &&
		for i in $thumbnail_sizes; do
			  thumbdstdir="$thumbs/$i/$dstdir"
			  [ -e "$thumbdstdir" ] || mkdir -p "$thumbdstdir"
			  cp -nlT "$thumbs/$srcdir/${i}x${i}/$src.jpg" "$thumbdstdir/$dst.jpg"
		done
	done
}

cd ..
for f in images thumbs; do
	mkdir -p "orig/$f"
	mv -t "orig/$f" "$f"/????
done
echo "Image and thumbnail files have been hard-linked to their new names. The original files reside in »$PWD/orig« for the case anything went wrong." >&2

mysql -B "$newschema" <<<-'EOF'
	UPDATE `pl_images` SET `keyword` = SUBSTRING(`keyword`, 9);
	ALTER TABLE `pl_images` DROP `image`;
EOF


# split tags
mysql -B -r "$oldschema" <<-'EOF' |
	SELECT CONCAT(
			REPLACE(`tags`, ' ', CONCAT(' ', `id`, '\n')), ' ', `id`, '\n',
			REPLACE(SUBSTRING(`keyword`, 9), '-', CONCAT(' ', `id`, '\n')), ' ', `id`
		) AS `tag_id`
	FROM `lb_images`;
EOF
sed -nre '
	1 a SET max_heap_table_size = 4<<30; SET tmp_table_size = 4<<30; CREATE TEMPORARY TABLE `pl_tags_migrate` (`image` BIGINT UNSIGNED NOT NULL, `tag` VARCHAR(127) NOT NULL) ENGINE=MEMORY;
	s/,+//g
	/^[^a-zA-Z\s]* /d
	s/([\\\x27])/\\\1/g
	s/^(\S{2,127}) ([0-9]+)$/INSERT INTO `pl_tags_migrate` (`image`, `tag`) VALUES (\2, \x27\L\1\x27);/p
	$ a DELETE FROM `pl_tags`; INSERT IGNORE INTO `pl_tags` (`image`, `tag`) SELECT DISTINCT t.`image`, t.`tag` FROM pl_tags_migrate AS t INNER JOIN pl_images AS i ON t.image = i.id WHERE CHAR_LENGTH(t.`tag`) >= 2;
' | #cat; exit
uniq |
tee >(exec mysql -B "$newschema")
